name: Build

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 1 *'
    - cron: '0 0 1 4 *'
    - cron: '0 0 30 6 *'
    - cron: '0 0 28 9 *'
    - cron: '0 0 27 12 *'

env:
  CONF_ARGS: "--disable-shared"
  CMAKE_ARGS: "-DBUILD_SHARED_LIBS=0"
  CFLAGS: "-fPIC"
  CXXFLAGS: "-fPIC"
  LDFLAGS: "-L/usr/local/lib -fuse-ld=lld"

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          fetch-depth: 0
          
      - name: Set up Procursus
        uses: itsnebulalol/procursus-action@patch-1 # temporarily change this to my fork since upstream is broken
        with:
          packages: cmake llvm make automake autoconf cmake clang bash sed openssl libssl-dev lld
          cache: true
          mirror: https://procursus.itsnebula.net

      - name: Build libgeneral
        run: |
          git clone --single-branch https://github.com/tihmstar/libgeneral
          cd libgeneral
          ./autogen.sh $CONF_ARGS
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build libinsn
        run: |
          git clone --single-branch https://github.com/tihmstar/libinsn
          cd libinsn
          ./autogen.sh $CONF_ARGS
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build cctools
        run: |
          mkdir cctools
          cd cctools
          curl -LO https://opensource.apple.com/tarballs/cctools/cctools-927.0.2.tar.gz
          tar -xvzf cctools-927.0.2.tar.gz
          sed -i 's_#include_//_g' cctools-cctools-927.0.2/include/mach-o/loader.h
          sed -i -e 's=<stdint.h>=\n#include <stdint.h>\ntypedef int integer_t;\ntypedef integer_t cpu_type_t;\ntypedef integer_t cpu_subtype_t;\ntypedef integer_t cpu_threadtype_t;\ntypedef int vm_prot_t;=g' cctools-cctools-927.0.2/include/mach-o/loader.h
          sudo mkdir -p /usr/local/include
          sudo cp -r cctools-cctools-927.0.2/include/* /usr/local/include/
          rm -rf tmp cctools-927.0.2.tar.gz
          cd ..

      - name: Build liboffsetfinder64
        run: |
          git clone --single-branch https://github.com/palera1n/liboffsetfinder64
          cd liboffsetfinder64
          cmake . $CMAKE_ARGS
          sed -i -r 's/_entrypoint\(NULL\)/_entrypoint(0)/' src/patchfinder64.cpp
          sed -i -r 's/_base\(NULL\)/_base(0)/' src/patchfinder64.cpp
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build lzfse
        run: |
          git clone --depth=1 https://github.com/lzfse/lzfse
          cd lzfse
          cmake . $CMAKE_ARGS
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build libplist
        run: |
          git clone --depth=1 https://github.com/libimobiledevice/libplist
          cd libplist
          ./autogen.sh $CONF_ARGS --without-cython
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build img4tool
        env:
          LDFLAGS: "${LDFLAGS} -L/usr/local/lib"
        run: |
          git clone --single-branch https://github.com/tihmstar/img4tool
          cd img4tool
          ls -l /usr/local/include/ /usr/local/lib/
          ./autogen.sh $CONF_ARGS
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build
        run: |
          sed -i 's/futurerestore/iBoot64Patcher/g' CMakeLists.txt
          cmake . $CMAKE_ARGS
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          sudo rm -rf /tmp/build

          echo -n $(git rev-parse HEAD | tr -d '\n') > latest_build_sha.txt
          echo -n $(git rev-list --count HEAD | tr -d '\n') > latest_build_num.txt

      - name: Upload versioning
        uses: actions/upload-artifact@v2
        with:
          name: Versioning
          path: |
            ${{ github.workspace }}/latest_build_sha.txt
            ${{ github.workspace }}/latest_build_num.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: iBoot64Patcher-Darwin
          path: /usr/local/iBoot64Patcher

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Prepare environment
        run: |
          sudo apt-get -qq update
          sudo apt-get -yqq dist-upgrade
          sudo apt-get install --no-install-recommends -yqq zstd curl gnupg2 lsb-release wget software-properties-common build-essential git autoconf automake libtool-bin pkg-config cmake zlib1g-dev libminizip-dev libpng-dev libreadline-dev libbz2-dev libudev-dev libudev1 libreadline-dev llvm lld musl musl-dev musl-tools
          sudo cp -RpP /usr/bin/ld /
          sudo rm -rf /usr/bin/ld
          sudo ln -sf /usr/bin/ld.lld-13 /usr/bin/ld
          sudo ln -sf /lib/x86_64-linux-gnu/libtic.so.6.* /lib/x86_64-linux-gnu/libtinfow.so.6

      - name: Build libgeneral
        run: |
          git clone --single-branch https://github.com/tihmstar/libgeneral
          cd libgeneral
          ./autogen.sh $CONF_ARGS
          make -j$(nproc)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build libinsn
        run: |
          git clone --single-branch https://github.com/tihmstar/libinsn
          cd libinsn
          ./autogen.sh $CONF_ARGS
          make -j$(nproc)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build cctools
        run: |
          mkdir cctools
          cd cctools
          curl -LO https://opensource.apple.com/tarballs/cctools/cctools-927.0.2.tar.gz
          tar -xvzf cctools-927.0.2.tar.gz
          sed -i 's_#include_//_g' cctools-cctools-927.0.2/include/mach-o/loader.h
          sed -i -e 's=<stdint.h>=\n#include <stdint.h>\ntypedef int integer_t;\ntypedef integer_t cpu_type_t;\ntypedef integer_t cpu_subtype_t;\ntypedef integer_t cpu_threadtype_t;\ntypedef int vm_prot_t;=g' cctools-cctools-927.0.2/include/mach-o/loader.h
          sudo mkdir -p /usr/local/include
          sudo cp -r cctools-cctools-927.0.2/include/* /usr/local/include/
          rm -rf tmp cctools-927.0.2.tar.gz
          cd ..

      - name: Build liboffsetfinder64
        run: |
          git clone --single-branch https://github.com/palera1n/liboffsetfinder64
          cd liboffsetfinder64
          cmake . $CMAKE_ARGS
          sed -i -r 's/_entrypoint\(NULL\)/_entrypoint(0)/' src/patchfinder64.cpp
          sed -i -r 's/_base\(NULL\)/_base(0)/' src/patchfinder64.cpp
          make -j$(nproc)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build lzfse
        run: |
          git clone --depth=1 https://github.com/lzfse/lzfse
          cd lzfse
          cmake . $CMAKE_ARGS
          make -j$(nproc)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build libplist
        run: |
          git clone --depth=1 https://github.com/libimobiledevice/libplist
          cd libplist
          ./autogen.sh $CONF_ARGS --without-cython
          make -j$(nproc)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build img4tool
        env:
          LDFLAGS: "${LDFLAGS} -L/usr/local/lib"
        run: |
          git clone --single-branch https://github.com/tihmstar/img4tool
          cd img4tool
          ls -l /usr/local/include/ /usr/local/lib/
          ./autogen.sh $CONF_ARGS
          make -j$(nproc)
          sudo make install
          sudo rm -rf /tmp/build
          cd ..

      - name: Build
        run: |
          sed -i 's/futurerestore/iBoot64Patcher/g' CMakeLists.txt
          cmake . $CMAKE_ARGS
          make -j$(nproc)
          sudo make install
          sudo rm -rf /tmp/build

          echo -n $(git rev-parse HEAD | tr -d '\n') > latest_build_sha.txt
          echo -n $(git rev-list --count HEAD | tr -d '\n') > latest_build_num.txt

      - name: Upload versioning
        uses: actions/upload-artifact@v2
        with:
          name: Versioning
          path: |
            ${{ github.workspace }}/latest_build_sha.txt
            ${{ github.workspace }}/latest_build_num.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: iBoot64Patcher-Linux
          path: /usr/local/iBoot64Patcher
